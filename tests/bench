#!/bin/bash

function on_exit() {
    if [ "$PID" ]; then kill $PID; wait $PID || true; fi
    [ -d "$TMP" ] && rm -rf $TMP
}

trap 'on_exit' EXIT
trap 'exit' ERR

export TMP=`mktemp -d`
mkdir -p $TMP/db

# Generate the server keys
jose gen -t '{"alg": "ES256"}'                                         > $TMP/db/sig.jwk
jose gen -t '{"alg": "ECDH-ES+A128KW"}'                                > $TMP/db/enc.jwk
jose gen -t '{"kty": "EC", "crv": "P-256", "key_ops": ["deriveKey"] }' > $TMP/db/exc.jwk

# Generate the client keys for the wrap test
enc_kid=`jose thp -i $TMP/db/enc.jwk`
jose gen -t '{"alg": "A128GCMKW"}' -o $TMP/jwk.jwk

# Generate the client keys for the anon test
exc_kid=`jose thp -i $TMP/db/exc.jwk`
jose gen -t '{"kty": "EC", "crv": "P-256"}' -o $TMP/exc.jwk
jose pub -i $TMP/exc.jwk -o $TMP/exc.pub.jwk

for ipv in 4 6; do
  for flags in "-a" "" "-d"; do
    port=`shuf -i 1024-65536 -n 1`
    if [ $ipv -eq 4 ]; then
      addr="127.0.0.1"
    else
      addr="[::1]"
    fi

    systemd-socket-activate -l "$addr:$port" $flags \
      $VALGRIND ./src/tangd src/.libs/dbdir.so $TMP/db 2>/dev/null &
    export PID=$!

    sleep 0.1

    type=$flags
    if [ "$type" != "-d" ]; then
      type="-s"
    fi

    ##
    ### Test ADV
    ##

    echo -e "\nADV (anon) $ipv $flags"
    tests/benchmark -$ipv $type -a $addr -p $port <<EOF
GET /adv HTTP/1.1
Host: localhost
Connection: close

EOF

    ##
    ### Test REC (wrap)
    ##

    # Make a wrap recovery request
    tmp=$(printf '{"protected":{"tang.bid":"bar"},"unprotected":{"tang.jwk": %s}}' "`cat $TMP/jwk.jwk`")
    jwe=`echo -e foo | jose enc -i- -t "$tmp" -k $TMP/db/enc.jwk | jose enc -i- -k $TMP/db/enc.jwk`
    len=`echo -n "$jwe" | wc -c`

    echo -e "\nREC (wrap) $ipv $flags"
    tests/benchmark -$ipv $type -a $addr -p $port <<EOF
POST /rec/$enc_kid HTTP/1.1
Host: localhost
Connection: close
Content-Length: $len

$jwe
EOF

    ##
    ### Test REC (anon) (NOTE: this is insecure! Don't do this in real code!)
    ##

    jwk=`cat $TMP/exc.pub.jwk`
    len=`echo -n "$jwk" | wc -c`

    echo -e "\nREC (anon) $ipv $flags"
    tests/benchmark -$ipv $type -a $addr -p $port <<EOF
POST /rec/$exc_kid HTTP/1.1
Host: localhost
Connection: close
Content-Length: $len

$jwk
EOF

    kill $PID
    wait $PID || true
    unset PID
  done
done
