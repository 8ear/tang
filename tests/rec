#!/bin/bash -x

function on_exit() {
    if [ "$PID" ]; then kill $PID; wait $PID || true; fi
    [ -d "$TMP" ] && rm -rf $TMP
}

trap 'on_exit' EXIT
trap 'exit' ERR

export TMP=`mktemp -d`
mkdir -p $TMP/db
mkdir -p $TMP/bl

# Start the server
port=`shuf -i 1024-65536 -n 1`
systemd-socket-activate -l 127.0.0.1:$port $VALGRIND src/tangd \
  src/.libs/dbdir.so $TMP/db \
  src/.libs/bldir.so $TMP/bl &
export PID=$!

# Generate the server keys (note: the server picks them up automatically)
jose gen -t '{"alg": "ES256"}' -o $TMP/db/sig.jwk
jose gen -t '{"alg": "ECDH-ES+A128KW"}' -o $TMP/db/enc.jwk
jose gen -t '{"kty": "EC", "crv": "P-256", "key_ops": ["deriveKey"] }' -o $TMP/db/exc.jwk

# Generate the client keys for the wrap test
enc_kid=`jose thp -i $TMP/db/enc.jwk`
jose gen -t '{"alg": "A128GCMKW"}' -o $TMP/jwk.jwk

# Generate the client keys for the anon test
exc_kid=`jose thp -i $TMP/db/exc.jwk`
jose gen -t '{"kty": "EC", "crv": "P-256"}' -o $TMP/exc.jwk
jose pub -i $TMP/exc.jwk -o $TMP/exc.pub.jwk

# Make sure that GET fails
! wget -O- http://127.0.0.1:$port/rec
! wget -O- http://127.0.0.1:$port/rec/

# Make a wrap recovery request
tmp=$(printf '{"protected":{"tang.bid":"bar"},"unprotected":{"tang.jwk":%s}}' "`cat $TMP/jwk.jwk`")
jwe=`echo -e foo | jose enc -i- -t "$tmp" -k $TMP/db/enc.jwk | jose enc -i- -k $TMP/db/enc.jwk`
val=`wget -O- --post-data="$jwe" http://127.0.0.1:$port/rec/$enc_kid | jose dec -i- -k $TMP/jwk.jwk`
[ "$val" == "foo" ]

# Make sure that the blacklist works
touch $TMP/bl/bar
sleep 0.25
! wget -O- --post-data="$jwe" http://127.0.0.1:$port/rec/$enc_kid
rm -f $TMP/bl/bar
sleep 0.25
val=`wget -O- --post-data="$jwe" http://127.0.0.1:$port/rec/$enc_kid | jose dec -i- -k $TMP/jwk.jwk`
[ "$val" == "foo" ]

# Make an anon recovery request (NOTE: this is insecure! Don't do this in real code!)
good=`jose exc -l $TMP/exc.jwk -r $TMP/db/exc.jwk`
test=$(wget -O- --post-data="`cat $TMP/exc.pub.jwk`" http://127.0.0.1:$port/rec/$exc_kid)
[ "$good" == "$test" ]
